---
- name: Copy webapp source files to server
  synchronize: src={{ local_src_dir }} dest={{ remote_project_dir }} delete=yes
  sudo: no

- name: Chmod 0777 webapp runtime directory
  file: path={{ remote_runtime_dir }} mode=0777
  sudo: no

- name: Install php-cli and PEAR
  apt: pkg={{ item }} state=present
  with_items:
    - php5-cli  # for installing Composer and PEAR
    - php5-dev  # for installing some packages managed by PEAR
    - php-pear

- name: Install Composer
  shell: curl -sS https://getcomposer.org/installer | php chdir={{ remote_project_dir }} creates=composer.phar
  sudo: no

- name: Install PHP extensions managed by apt
  apt: pkg={{ item }} state=present
  with_items:
    - php5-mysql
    - php5-imagick
    - php5-redis

- name: Install PHP extensions managed by PEAR
  command: pecl install {{ item }}
  with_items:
    - mongo

- name: Configure php-fpm for mongo extension
  lineinfile: dest=/etc/php5/fpm/php.ini line='extension=mongo.so'

- name: Install PHP packages managed by Composer
  command: php composer.phar--no-interaction update chdir={{ remote_project_dir }}
  sudo: no

- name: Delete unnecessary autoloads in Composer
  lineinfile: dest={{ remote_project_dir }}/vendor/composer/autoload_classmap.php regexp={{ item }} state=absent
  with_items:
    - '/sammaye/mongoyii/'  # The composer.json in MongoYii imports "tests" directory mistakenly.
    - '/codemix/yiiredis/'
  sudo: no

- name: Download smarty-renderer-master.zip
  get_url: url=https://github.com/yiiext/smarty-renderer/archive/master.zip dest=/tmp/smarty-renderer-master.zip
  sudo: no

- name: Unzip smarty-renderer-master.zip
  command: unzip /tmp/smarty-renderer-master.zip chdir=/tmp
  sudo: no

- name: Copy source files of smarty view renderer
  command: cp -r /tmp/smarty-renderer-master/{{ item }} {{ remote_project_dir }}/vendor/smarty/smarty/distribution/libs/
  with_items:
    - ESmartyViewRenderer.php
    - plugins/
  sudo: no
  notify: delete files of smarty view renderer

- name: Create database
  mysql_db: name={{ db_name }} state=present login_user={{ db_user }} login_password={{ db_password }}
  sudo: no

- name: Initial database data with script file
  mysql_db: name={{ db_name }} state=import target={{ remote_sql_file }} login_user={{ db_user }} login_password={{ db_password }}
  sudo: no